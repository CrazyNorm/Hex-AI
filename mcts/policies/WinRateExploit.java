package mcts.policies;

import mcts.TreeNode;

public class WinRateExploit extends ExploitPolicy {
    // selects the move with the best win rate (payoff / count)

    @Override
    public TreeNode exploit(TreeNode root) {
        // returns the child node with the highest win rate

        double bestWinRate = Double.NEGATIVE_INFINITY;
        TreeNode bestMove = null;

        for (TreeNode child: root.getChildren()) {
            double winRate = (double) child.getPayoff() / child.getCount();
            if (winRate > bestWinRate) {
                bestWinRate = winRate;
                bestMove = child;
            }
        }

        return bestMove;
    }
}
