package mcts.policies;

import mcts.TreeNode;

public class MostVisitedExploit extends ExploitPolicy {
    // selects the move which was visited most

    @Override
    public TreeNode exploit(TreeNode root) {
        // returns the child node with the highest visited count

        double mostVisited = Double.NEGATIVE_INFINITY;
        TreeNode bestMove = null;

        for (TreeNode child: root.getChildren()) {
            if (child.getCount() > mostVisited) {
                mostVisited = child.getCount();
                bestMove = child;
            }
        }

        return bestMove;
    }
}
